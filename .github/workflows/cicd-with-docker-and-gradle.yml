name: Cicd With Docker And Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # build
      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: './src/main/resources/application.yml'
        env:
          spring.datasource.url: ${{ secrets.DATABASE_URL }}
          spring.datasource.username: ${{ secrets.DATABASE_USERNAME }}
          spring.datasource.password: ${{ secrets.DATABASE_PASSWORD }}
          security.jwt.token.secret-key: ${{ secrets.JWT_SECRETKEY }}
          security.jwt.token.access-token-expire-time: ${{ secrets.JWT_ACCESSTOKEN_EXPIRE_TIME }}
          security.jwt.token.refresh-token-expire-time: ${{ secrets.JWT_REFRESH_EXPIRE_TIME }}
          spring.redis.host: ${{ secrets.REDIS_HOST }}
          cloud.aws.region: ${{ secrets.AWS_S3_REGION }}
          cloud.aws.credentials.accessKey: ${{ secrets.AWS_S3_ACCESSKEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.AWS_S3_SECRETKEY }}
          cloud.s3.bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
          cloud.s3.path.root: ${{ secrets.AWS_S3_ROOT_PATH }}

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      # docker push
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ steps.date.outputs.date }}
          labels: ${{ steps.meta.outputs.labels }}

      # docker run
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            docker pull ${{ steps.meta.outputs.tags }}-${{ steps.date.outputs.date }}
            docker stop dev-server
            docker rm dev-server
            docker run --restart always -d --net my-bridge --name dev-server -p 8080:8080 ${{ steps.meta.outputs.tags }}-${{ steps.date.outputs.date }}
